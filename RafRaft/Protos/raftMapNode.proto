syntax = "proto3";
import "google/protobuf/struct.proto";
import "google/protobuf/empty.proto";

option csharp_namespace = "RafRaft.Protos";

package RafRaft;

service RaftMapNode {
    rpc AppendEntries(AppendMapEntriesRequest) returns (AppendMapEntriesReply);
    rpc RequestVote(VoteMapRequest) returns (VoteMapReply);
    rpc TestConnection(google.protobuf.Empty) returns (google.protobuf.Empty);
}

message AppendMapEntriesRequest {
    int32 term = 1;
    int32 leaderId = 2;
    int32 prevLogId = 3;
    int32 prevLogTerm = 4;
    repeated LogMapEntry entries = 5;
    int32 leaderCommitId = 6;
}

message AppendMapEntriesReply {
    int32 term = 1;
    bool success = 2;
}

message VoteMapRequest {
    int32 term = 1;
    int32 candidateId = 2;
    int32 lastLogId = 3;
    int32 lastLogTerm = 4;
}

message VoteMapReply {
    int32 term = 1;
    bool voteGranted = 2;
}

message LogMapEntry {
   int32 term = 1;
   int32 index = 2;
   string key = 3;
   Data value = 4;
}

message Data {
   oneof Data {
      google.protobuf.Value value = 1;
      Object object = 2;
   }
}

message Object {
   map<string, Data> object = 1;
}